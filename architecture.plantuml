@startuml

package Model <<Rectangle>> {

    package DTO <<Folder>> {
        entity VehiculeDto {
        }

        entity FireDto {
        }
        entity FacilityDto {
        }

        enum liquidType {
        }

        entity VehiculeType {
        }
    }

    package ModelVehicule <<rectangle>> {
        interface InterfaceVehicule {
            + void missionTrue();
            + void missionFalse();
            + boolean getMission();
            + void deplacement(double lon, double lat, float distance);
            + int calculScore(FireDto fire, FacilityDto facility, Path path);
            + void gestionCrew();
            + void gestionConsommationEssence(float distance);
            + FacilityDto findFacility();
            + VehiculeDto getVehiculeDto();
        }

        abstract AbstractVehicule {
            - boolean mission
            - VehiculeDto vehicule
            + FacilityDto findFacilityById(int id)
            + abstract int calculScore(FireDto fire, FacilityDto facility, Path path)
        }

        class Vehicule {
            - mission
            - VehiculeDto vehiculeDto
            + calculScore(FireDto fire, FacilityDto facility, Path path)
        }

        InterfaceVehicule o.. AbstractVehicule
        AbstractVehicule o-- Vehicule
    }

    package Manager <<Folder>> {

        class RemoteControl {
            newMission()
        }

        package BlocAffectation <<rectangle>> {
            class Strategy {
                - feux
                - casernes
                - vehicules
                calculScore()
            }
        }

        package BlocMission <<rectangle>> {
            abstract Mission {
                run()
            }

            class MissionFeu {
            }

            class MissionRavitaillement {
            }

            Mission o-- MissionFeu
            Mission o-- MissionRavitaillement

            class LogMission {
                - List<FireDto> missionEnCours
                @getter() 
            }
        }

        RemoteControl -> BlocAffectation
        Strategy -> BlocMission

    }

    package BlocCalcul <<Folder>> {
        class Path {
            - double depart_lat
            - double depart_lon
            - double arrivee_lat
            - double arrivee_lon
            - JsonNode points
            + Path(double dep_lat,double dep_lon,double arr_lat,double arr_lon)
            initPoint()
            pathMap()
            time()
            distanceBetweenPoint()
            distancePoint()
        }

        class MapBoxPath {
            static final String MapBoxURL1
            static final String MapBoxURL2
            + JSONObject requestMapBoxPath(double lon1, double lat1, double lon2, double lat2)
        }

        class ConstantCalcul {
            - vitesseVehicule {m/s}
            - coeffKm2Coord
            - deltaT {secondes}
            @getter()
        }
    }

    package Communicator <<Folder>> {

        class Requester {
            requestFire()
            requestOneFire()
            requestFacility()
            requestFacilityById()
            requestVehicle()
            requestOneVehicle()
            postVehicle()
        }

        enum ConstantURL {
            - FireURL
	        - VehiculeURL
	        - FacilityURL
            @getter()
        }

    }

}

package Controller <<Rectangle>> {

    class VehiculeRepository {
        CRUD Vehicule
    }

    class VehiculeService {
        listVehicule()
        update()
    }

    class VehiculeRest {
        GET getListVehicule()
        POST updateVehicule()
    }

    class VehiculeRest {
        GET getListVehicule()
        POST updateVehicule()
    }


    VehiculeRest -|> VehiculeService
    VehiculeService -|> VehiculeRepository

    VehiculeService o- InterfaceVehicule

}


@enduml